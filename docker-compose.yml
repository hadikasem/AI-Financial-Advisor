# Docker Compose Configuration for Full-Stack Risk Assessment App

version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: risk_agent_db
      POSTGRES_USER: risk_agent_user
      POSTGRES_PASSWORD: risk_agent_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U risk_agent_user -d risk_agent_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Flask Backend API
  backend:
    build: ./backend
    environment:
      - DATABASE_URL=postgresql://risk_agent_user:risk_agent_password@db:5432/risk_agent_db
      - SECRET_KEY=your-super-secret-key-change-this-in-production
      - JWT_SECRET_KEY=jwt-secret-key-change-this-in-production
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
      - OLLAMA_MODEL=gpt-oss:20b
      - OLLAMA_HOST=http://ollama:11434
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
      ollama:
        condition: service_started
    volumes:
      - ./backend:/app
    command: python app.py

  # Ollama LLM Service
  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    command: serve

  # Streamlit Frontend
  frontend:
    build: ./frontend
    environment:
      - API_BASE_URL=http://backend:5000/api
    ports:
      - "8501:8501"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
    command: streamlit run app.py --server.address 0.0.0.0 --server.port 8501

volumes:
  postgres_data:
  ollama_data:

networks:
  default:
    name: risk_agent_network
